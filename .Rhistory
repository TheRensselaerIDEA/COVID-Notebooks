source("./Modules/Source.R")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../")
source("./Modules/Source.R")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = ".../")
source("./Modules/Source.R")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../")
source("./Modules/Source.R")
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../")
source("./Modules/Source.R")
data <- readRDS("./TemporalResults/NationalModel/ALL_C.rds")
data <- melt(data)
data <- dplyr::rename(data, c(date = variable))
ggplot(data, aes(x=date, y=value, group=coefficients, color=coefficients)) +
geom_line() +
geom_point()
data <- readRDS("./TemporalResults/NationalModel/ALL_C_sig.rds")
data <- melt(data)
data <- dplyr::rename(data, c(date = variable))
ggplot(data, aes(x=date, y=value, group=coefficients, color=coefficients)) +
geom_line() +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "./")
source("./Modules/Source.R")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../")
library("MASS")
library("lme4")
library("glmmTMB")
library("gamm4")
library('caret')
library('blmeco')
library(pROC)
library(VineCopula)
library("PerformanceAnalytics")
library(glmmTMB)
library(ggplot2)
library(cvms)
library(sgof)
library(tidyverse)
library(kableExtra)
# set datafile from parallelism
# args <- commandArgs()
# datafile = args[6]
# set datefile by hand
# datafile = '07-05-2020data-2.Rds'
datafile = './Preprocessing_FTS_Outputs/07-12-2020data.Rds'
aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart<-readRDS(datafile)
# aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart <- subset(aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart,
#                                                                       select = c(Deaths, `% Hispanic`, `% Black`, `% Asian`, `% Non-Hispanic White`, `% Native Hawaiian/Other Pacific Islander`, q_popdensity,
#                                                                                  `Median Household Income`, date_since_social, date_since, date_since_reopen, date_since_reclosure, date_since_mask,
#                                                                                  pct_obesity, pct_age65, pct_diabetes, LungCancer, COPD, AdultAsthma, PediatricAsthma, All.Cause.death_rate, state, population))
combined.mode.nb.random.off.main = glmer.nb(Deaths
~ scale(`% Hispanic`) + scale(`% Black`) + scale(`% Asian`)
+ scale(`% Non-Hispanic White`) + scale(`% Native Hawaiian/Other Pacific Islander`)
# ~ scale(`hispanic`) + scale(`pct_blk`) + scale(`pct_asian`)
# + scale(`pct_white`) + scale(`pct_native`)
+ factor(q_popdensity)
+ scale(log(`Median Household Income`))
+ scale(date_since_social) + scale(date_since)
+ scale(date_since_reopen)
+ scale(date_since_reclosure)
+ scale(date_since_mask)
+ scale(pct_obesity)
+ scale(pct_age65) + scale(pct_diabetes)
+ scale(LungCancer)
+ scale(COPD)
+ scale(AdultAsthma)
+ scale(PediatricAsthma)
+ scale(All.Cause.death_rate)
+ (1|state)
+ offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
# save results in parallelism
date = substr(datafile, 29,33)
assign(date, summary(combined.mode.nb.random.off.main))
fname = paste("./TemporalResults/NationalModel/",date,"_control.rda",sep="")
do.call(save, list(date, file=fname))
s<-summary(combined.mode.nb.random.off.main)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../")
library("MASS")
library("lme4")
library("glmmTMB")
library("gamm4")
library('caret')
library('blmeco')
library(pROC)
library(VineCopula)
library("PerformanceAnalytics")
library(glmmTMB)
library(ggplot2)
library(cvms)
library(sgof)
library(tidyverse)
library(kableExtra)
# set datafile from parallelism
# args <- commandArgs()
# datafile = args[6]
# set datefile by hand
# datafile = '07-05-2020data-2.Rds'
datafile = './Preprocessing_FTS_Outputs/07-12-2020data.Rds'
aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart<-readRDS(datafile)
# aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart <- subset(aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart,
#                                                                       select = c(Deaths, `% Hispanic`, `% Black`, `% Asian`, `% Non-Hispanic White`, `% Native Hawaiian/Other Pacific Islander`, q_popdensity,
#                                                                                  `Median Household Income`, date_since_social, date_since, date_since_reopen, date_since_reclosure, date_since_mask,
#                                                                                  pct_obesity, pct_age65, pct_diabetes, LungCancer, COPD, AdultAsthma, PediatricAsthma, All.Cause.death_rate, state, population))
combined.mode.nb.random.off.main = glmer.nb(Deaths
~ scale(`% Hispanic`) + scale(`% Black`) + scale(`% Asian`)
+ scale(`% Non-Hispanic White`) + scale(`% Native Hawaiian/Other Pacific Islander`)
# ~ scale(`hispanic`) + scale(`pct_blk`) + scale(`pct_asian`)
# + scale(`pct_white`) + scale(`pct_native`)
+ factor(q_popdensity)
+ scale(log(`Median Household Income`))
+ scale(date_since_social) + scale(date_since)
+ scale(date_since_reopen)
+ scale(date_since_reclosure)
+ scale(date_since_mask)
+ scale(pct_obesity)
+ scale(pct_age65) + scale(pct_diabetes)
+ scale(LungCancer)
+ scale(COPD)
+ scale(AdultAsthma)
+ scale(PediatricAsthma)
+ scale(All.Cause.death_rate)
+ (1|state)
+ offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=10000)))
# save results in parallelism
date = substr(datafile, 29,33)
assign(date, summary(combined.mode.nb.random.off.main))
fname = paste("./TemporalResults/NationalModel/",date,"_control.rda",sep="")
do.call(save, list(date, file=fname))
s<-summary(combined.mode.nb.random.off.main)
print(`07-12`)
load("~/COVID-Notebooks/TemporalResults/NationalModel/07-12.rda")
print(`07-12`)
data <- readRDS("./TemporalResults/NationalModel/ALL_C_sig.rds")
data <- melt(data)
data <- dplyr::rename(data, c(date = variable))
ggplot(data, aes(x=date, y=value, group=coefficients, color=coefficients)) +
geom_line() +
geom_point()
load("~/COVID-Notebooks/TemporalResults/NationalModel/07-12_1.rda")
print(`07-12`)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../")
library("MASS")
library("lme4")
library("glmmTMB")
library("gamm4")
library('caret')
library('blmeco')
library(pROC)
library(VineCopula)
library("PerformanceAnalytics")
library(glmmTMB)
library(ggplot2)
library(cvms)
library(sgof)
library(tidyverse)
library(kableExtra)
# set datafile from parallelism
# args <- commandArgs()
# datafile = args[6]
# set datefile by hand
# datafile = '07-05-2020data-2.Rds'
datafile = './Preprocessing_FTS_Outputs/07-12-2020data.Rds'
aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart<-readRDS(datafile)
# aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart <- subset(aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart,
#                                                                       select = c(Deaths, `% Hispanic`, `% Black`, `% Asian`, `% Non-Hispanic White`, `% Native Hawaiian/Other Pacific Islander`, q_popdensity,
#                                                                                  `Median Household Income`, date_since_social, date_since, date_since_reopen, date_since_reclosure, date_since_mask,
#                                                                                  pct_obesity, pct_age65, pct_diabetes, LungCancer, COPD, AdultAsthma, PediatricAsthma, All.Cause.death_rate, state, population))
combined.mode.nb.random.off.main = glmer.nb(Deaths
~ scale(`% Hispanic`) + scale(`% Black`) + scale(`% Asian`)
+ scale(`% Non-Hispanic White`) + scale(`% Native Hawaiian/Other Pacific Islander`)
# ~ scale(`hispanic`) + scale(`pct_blk`) + scale(`pct_asian`)
# + scale(`pct_white`) + scale(`pct_native`)
+ factor(q_popdensity)
+ scale(log(`Median Household Income`))
+ scale(date_since_social) + scale(date_since)
+ scale(date_since_reopen)
+ scale(date_since_reclosure)
+ scale(date_since_mask)
+ scale(pct_obesity)
+ scale(pct_age65) + scale(pct_diabetes)
+ scale(LungCancer)
+ scale(COPD)
+ scale(AdultAsthma)
+ scale(PediatricAsthma)
+ scale(All.Cause.death_rate)
+ (1|state)
+ offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=100000)))
# save results in parallelism
date = substr(datafile, 29,33)
assign(date, summary(combined.mode.nb.random.off.main))
fname = paste("./TemporalResults/NationalModel/",date,"_control.rda",sep="")
do.call(save, list(date, file=fname))
s<-summary(combined.mode.nb.random.off.main)
install.packages("pracma")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "./")
source("./Modules/Source.R")
'%ni%' <- Negate('%in%')
## Unfiltered MRR
data_1 <- readRDS("./TemporalResults/NationalModel/ALL_C_sig.rds")
data_1 <- melt(data_1)
# data_1 <- subset(data_1, coefficients != "(Intercept)")
COEF <- data_1$coefficients
data_2 <- readRDS("./TemporalResults/NationalModel/ALL_C.rds")
data_2 <- melt(data_2)
# data_2 <- data_2[data_2$coefficients %in% COEF, ]
data_2 <- data_2[data_2$coefficients %ni% COEF, ]
data_2 <- subset(data_2, coefficients != "(Intercept)")
data_1 <- dplyr::rename(data_1, c(date = variable, `Social Determinants` = coefficients))
data_2 <- dplyr::rename(data_2, c(date = variable, `Social Determinants` = coefficients))
mrr <- ggplot(mapping = aes(x=date, y=value, group=`Social Determinants`, color=`Social Determinants`)) +
geom_point(data = data_2) +
geom_line(data = data_2) +
ggtitle("Temporal Analysis Insignificant Factors MRR Plot") +
ylab("MRR")
mrr
data_3 <- readRDS("./TemporalResults/NationalModel/ALL_P_sig.rds")
data_3 <- melt(data_3)
# data_3 <- subset(data_3, coefficients != "(Intercept)")
data_4 <- readRDS("./TemporalResults/NationalModel/ALL_P.rds")
data_4 <- melt(data_4)
# data_4 <- data_1[data_4$coefficients %in% COEF, ]
data_4 <- data_4[data_4$coefficients %ni% COEF, ]
data_4 <- subset(data_4, coefficients != "(Intercept)")
data_3 <- dplyr::rename(data_1, c(date = variable, `Social Determinants` = coefficients))
data_4 <- dplyr::rename(data_2, c(date = variable, `Social Determinants` = coefficients))
p <- ggplot(mapping = aes(x=date, y=value, group=`Social Determinants`, color=`Social Determinants`)) +
geom_point(data = data_4) +
geom_line(data = data_4) +
ggtitle("Temporal Analysis Insignificant Factors p-value Plot") +
ylab("p-value")
p
figure <- ggarrange(mrr, p,
common.legend = TRUE,
ncol = 1, nrow = 2)
figure
View(data_3)
View(data_4)
data_3 <- dplyr::rename(data_3, c(date = variable, `Social Determinants` = coefficients))
data_4 <- dplyr::rename(data_4, c(date = variable, `Social Determinants` = coefficients))
p <- ggplot(mapping = aes(x=date, y=value, group=`Social Determinants`, color=`Social Determinants`)) +
geom_point(data = data_4) +
geom_line(data = data_4) +
ggtitle("Temporal Analysis Insignificant Factors p-value Plot") +
ylab("p-value")
p
figure <- ggarrange(mrr, p,
common.legend = TRUE,
ncol = 1, nrow = 2)
figure
figure <- ggarrange(mrr, p,
legend = "left",
common.legend = TRUE,
ncol = 1, nrow = 2)
figure
figure <- ggarrange(mrr, p,
legend = "right",
common.legend = TRUE,
ncol = 1, nrow = 2)
figure
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "./")
source("./Modules/Source.R")
'%ni%' <- Negate('%in%')
## Unfiltered MRR
data_1 <- readRDS("./TemporalResults/NationalModel/ALL_C_sig.rds")
data_1 <- melt(data_1)
data_1 <- subset(data_1, coefficients != "(Intercept)")
COEF <- data_1$coefficients
data_2 <- readRDS("./TemporalResults/NationalModel/ALL_C.rds")
data_2 <- melt(data_2)
data_2 <- data_2[data_2$coefficients %in% COEF, ]
# data_2 <- data_2[data_2$coefficients %ni% COEF, ]
data_1 <- dplyr::rename(data_1, c(date = variable, `Social Determinants` = coefficients))
data_2 <- dplyr::rename(data_2, c(date = variable, `Social Determinants` = coefficients))
mrr <- ggplot(mapping = aes(x=date, y=value, group=`Social Determinants`, color=`Social Determinants`)) +
geom_point(data = data_1) +
geom_line(data = data_2) +
ggtitle("Temporal Analysis Significant Factors MRR Plot") +
ylab("MRR")
mrr
data_3 <- readRDS("./TemporalResults/NationalModel/ALL_P_sig.rds")
data_3 <- melt(data_3)
data_3 <- subset(data_3, coefficients != "(Intercept)")
data_4 <- readRDS("./TemporalResults/NationalModel/ALL_P.rds")
data_4 <- melt(data_4)
data_4 <- data_1[data_4$coefficients %in% COEF, ]
# data_4 <- data_4[data_4$coefficients %ni% COEF, ]
data_3 <- dplyr::rename(data_3, c(date = variable, `Social Determinants` = coefficients))
data_4 <- dplyr::rename(data_4, c(date = variable, `Social Determinants` = coefficients))
p <- ggplot(mapping = aes(x=date, y=value, group=`Social Determinants`, color=`Social Determinants`)) +
geom_point(data = data_3) +
geom_line(data = data_4) +
ggtitle("Temporal Analysis Significant Factors p-value Plot") +
ylab("p-value")
p
figure <- ggarrange(mrr, p,
legend = "right",
common.legend = TRUE,
ncol = 1, nrow = 2)
figure
View(data_3)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "./")
source("./Modules/Source.R")
'%ni%' <- Negate('%in%')
## Unfiltered MRR
data_1 <- readRDS("./TemporalResults/NationalModel/ALL_C_sig.rds")
data_1 <- melt(data_1)
data_1 <- subset(data_1, coefficients != "(Intercept)")
COEF <- data_1$coefficients
data_2 <- readRDS("./TemporalResults/NationalModel/ALL_C.rds")
data_2 <- melt(data_2)
data_2 <- data_2[data_2$coefficients %in% COEF, ]
# data_2 <- data_2[data_2$coefficients %ni% COEF, ]
data_1 <- dplyr::rename(data_1, c(date = variable, `Social Determinants` = coefficients))
data_2 <- dplyr::rename(data_2, c(date = variable, `Social Determinants` = coefficients))
mrr <- ggplot(mapping = aes(x=date, y=value, group=`Social Determinants`, color=`Social Determinants`)) +
geom_point(data = data_1) +
geom_line(data = data_2) +
ggtitle("Temporal Analysis Significant Factors MRR Plot") +
ylab("MRR")
mrr
data_3 <- readRDS("./TemporalResults/NationalModel/ALL_P_sig.rds")
data_3 <- melt(data_3)
data_3 <- subset(data_3, coefficients != "(Intercept)")
data_4 <- readRDS("./TemporalResults/NationalModel/ALL_P.rds")
data_4 <- melt(data_4)
data_4 <- data_1[data_4$coefficients %in% COEF, ]
# data_4 <- data_4[data_4$coefficients %ni% COEF, ]
data_3 <- dplyr::rename(data_3, c(date = variable, `Social Determinants` = coefficients))
data_4 <- dplyr::rename(data_4, c(date = variable, `Social Determinants` = coefficients))
p <- ggplot(mapping = aes(x=date, y=value, group=`Social Determinants`, color=`Social Determinants`)) +
geom_point(data = data_3) +
geom_line(data = data_4) +
ggtitle("Temporal Analysis Significant Factors p-value Plot") +
ylab("p-value")
p
data_3 <- readRDS("./TemporalResults/NationalModel/ALL_P_sig.rds")
data_3 <- melt(data_3)
data_3 <- subset(data_3, coefficients != "(Intercept)")
data_4 <- readRDS("./TemporalResults/NationalModel/ALL_P.rds")
data_4 <- melt(data_4)
data_4 <- data_4[data_4$coefficients %in% COEF, ]
# data_4 <- data_4[data_4$coefficients %ni% COEF, ]
data_3 <- dplyr::rename(data_3, c(date = variable, `Social Determinants` = coefficients))
data_4 <- dplyr::rename(data_4, c(date = variable, `Social Determinants` = coefficients))
p <- ggplot(mapping = aes(x=date, y=value, group=`Social Determinants`, color=`Social Determinants`)) +
geom_point(data = data_3) +
geom_line(data = data_4) +
ggtitle("Temporal Analysis Significant Factors p-value Plot") +
ylab("p-value")
p
figure <- ggarrange(mrr, p,
legend = "right",
common.legend = TRUE,
ncol = 1, nrow = 2)
figure
##### Load packages ####
# List of packages used:
# tidyverse
# sp
# raster
# dplyr
# sf
# stringr
# ggplot2
# grid
# pBrackets
# gridExtra
# lme4
# maps
# glmmTMB
# gamm4
# MASS
# RCurl
# httr
# data.table
# devtools
# NSAPHutils  # For threading w/ big data
# NSAPHplatform
# lubridate
# eatGet      # Saving glmer models to memory      # does not work in this version of R
#~~~~~~~~~~~~~~~ From Shayom's code
# blmeco
# VineCopula
# PerformanceAnalytics
# ggfortify
# foreign
# psych                # Could not find this package during install
# ResourceSelection
# ROCR
# klaR
# heplots
# hermite
# lattice
# boot
# DescTools
# car
# multcompView
# emmeans
# pscl
# robust
# AER
# usmap
# stats
# cluster
libs <- c("tidyverse", "sp", "raster", "ggplot2", "plyr", "dplyr", "sf", "stringr", "grid", "pBrackets", "gridExtra", "lme4", "maps",
"glmmTMB", "gamm4", "MASS", "RCurl", "httr", "data.table", "devtools", "lubridate", "blmeco", "VineCopula", "PerformanceAnalytics",
"ggfortify", "foreign", "ResourceSelection", "ROCR", "klaR", "heplots", "hermite", "lattice", "boot", "DescTools", "car",
"multcompView", "emmeans", "pscl", "robust", "AER", "usmap", "gsheet", "gplots", "stats", "cluster", "ggpubr")
LIBS_RC <- lapply(
LIBS_ALL,
function(lib_vec) {
rc <- c()
for (p in lib_vec) {
if (!require(p, character.only = T)) {
install.packages(p)
rc <- c(rc, require(p, character.only = T))
}
}
return(rc)
}
)
for (lib in libs){
if (!require(lib, character.only = T)) {
install.packages(lib)
library(lib)
}
}
if (!require("NSAPHutils")){
devtools::install_github("NSAPH/NSAPHutils") # need to be accessed via devtools
library("NSAPHutils")
}
##### Load packages ####
# List of packages used:
# tidyverse
# sp
# raster
# dplyr
# sf
# stringr
# ggplot2
# grid
# pBrackets
# gridExtra
# lme4
# maps
# glmmTMB
# gamm4
# MASS
# RCurl
# httr
# data.table
# devtools
# NSAPHutils  # For threading w/ big data
# NSAPHplatform
# lubridate
# eatGet      # Saving glmer models to memory      # does not work in this version of R
#~~~~~~~~~~~~~~~ From Shayom's code
# blmeco
# VineCopula
# PerformanceAnalytics
# ggfortify
# foreign
# psych                # Could not find this package during install
# ResourceSelection
# ROCR
# klaR
# heplots
# hermite
# lattice
# boot
# DescTools
# car
# multcompView
# emmeans
# pscl
# robust
# AER
# usmap
# stats
# cluster
libs <- c("tidyverse", "sp", "raster", "ggplot2", "plyr", "dplyr", "sf", "stringr", "grid", "pBrackets", "gridExtra", "lme4", "maps",
"glmmTMB", "gamm4", "MASS", "RCurl", "httr", "data.table", "devtools", "lubridate", "blmeco", "VineCopula", "PerformanceAnalytics",
"ggfortify", "foreign", "ResourceSelection", "ROCR", "klaR", "heplots", "hermite", "lattice", "boot", "DescTools", "car",
"multcompView", "emmeans", "pscl", "robust", "AER", "usmap", "gsheet", "gplots", "stats", "cluster", "ggpubr")
for (lib in libs){
if (!require(lib, character.only = T)) {
install.packages(lib)
library(lib)
}
}
if (!require("NSAPHutils")){
devtools::install_github("NSAPH/NSAPHutils") # need to be accessed via devtools
library("NSAPHutils")
}
