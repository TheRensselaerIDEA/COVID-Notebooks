for (i in 1:length(dates_names)){
fname <- paste("./TemporalResults/NationalModel/",dates_names[i],".rda",sep="")
load(fname)
summ <- eval(as.name(dates_names[i]))
c <- exp(summ[10]$coefficients[,1])
p <- summ[10]$coefficients[,4]
p <- p.adjust(p, method = 'BH', n = length(p))
# merge into master data frame
ALL_C$date <- c[match(ALL_C$coefficients, names(c))]
names(ALL_C)[names(ALL_C) == 'date'] <- dates_names[i]
ALL_P$date <- p[match(ALL_P$coefficients, names(p))]
names(ALL_P)[names(ALL_P) == 'date'] <- dates_names[i]
}
saveRDS(ALL_C, file = './TemporalResults/NationalModel/ALL_C.rds')
saveRDS(ALL_P, file = './TemporalResults/NationalModel/ALL_P.rds')
ALL_C_sig <- data.frame(coefficients = COEF)
ALL_P_sig <- data.frame(coefficients = COEF)
for (j in 1:length(COEF)){
column_C <- c()
column_P <- c()
for (i in 1:length(dates_names)){
c <- ALL_C[[dates_names[i]]][j]
p <- ALL_P[[dates_names[i]]][j]
if (!is.na(p) & p <= 0.05){
column_C <- append(column_C, c, after = length(column_C))
column_P <- append(column_P, p, after = length(column_P))
}else{
column_C <- append(column_C, NA, after = length(column_C))
column_P <- append(column_P, NA, after = length(column_P))
}
}
ALL_C_sig$coef <- column_C
names(ALL_C_sig)[names(ALL_C_sig) == 'coef'] <- COEF[j]
ALL_P_sig$coef <- column_P
names(ALL_P_sig)[names(ALL_P_sig) == 'coef'] <- COEF[j]
}
ALL_C_sig <- ALL_C_sig[rowSums(is.na(ALL_C_sig)) != ncol(ALL_C_sig) - 1, ]
ALL_P_sig <- ALL_P_sig[rowSums(is.na(ALL_P_sig)) != ncol(ALL_P_sig) - 1, ]
saveRDS(ALL_C_sig, file = './TemporalResults/NationalModel/ALL_C_sig.rds')
saveRDS(ALL_P_sig, file = './TemporalResults/NationalModel/ALL_P_sig.rds')
ggplot(data = ALL_C_sig, mapping = aes(x=n, y=coefficients))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "./")
source("./Modules/Source.R")
dates_names = c("03-29", "04-05", "04-12", "04-19", "04-26", "05-03", "05-10", "05-17", "05-24", "05-31", "06-07", "06-14", "06-21", "06-28", "07-05", "07-12")
COEF = c("(Intercept)",
"scale(`% Hispanic`)","scale(`% Black`)","scale(`% Asian`)","scale(`% Non-Hispanic White`)","scale(`% Native Hawaiian/Other Pacific Islander`)",
"factor(q_popdensity)2","factor(q_popdensity)3","factor(q_popdensity)4","factor(q_popdensity)5",
"scale(log(`Median Household Income`))",
"scale(date_since_social)","scale(date_since)","scale(date_since_reopen)","scale(date_since_reclosure)","scale(date_since_mask)",
"scale(pct_obesity)","scale(pct_age65)","scale(pct_diabetes)",
"scale(LungCancer)","scale(COPD)","scale(AdultAsthma)","scale(PediatricAsthma)",
"scale(All.Cause.death_rate)")
ALL_C = data.frame(coefficients = COEF)
ALL_P = data.frame(coefficients = COEF)
ALL_sig = data.frame(coefficients = COEF)
for (i in 1:length(dates_names)){
fname <- paste("./TemporalResults/NationalModel/",dates_names[i],".rda",sep="")
load(fname)
summ <- eval(as.name(dates_names[i]))
c <- exp(summ[10]$coefficients[,1])
p <- summ[10]$coefficients[,4]
p <- p.adjust(p, method = 'BH', n = length(p))
# merge into master data frame
ALL_C$date <- c[match(ALL_C$coefficients, names(c))]
names(ALL_C)[names(ALL_C) == 'date'] <- dates_names[i]
ALL_P$date <- p[match(ALL_P$coefficients, names(p))]
names(ALL_P)[names(ALL_P) == 'date'] <- dates_names[i]
}
saveRDS(ALL_C, file = './TemporalResults/NationalModel/ALL_C.rds')
saveRDS(ALL_P, file = './TemporalResults/NationalModel/ALL_P.rds')
ALL_C_sig <- data.frame(date = dates_names)
ALL_P_sig <- data.frame(date = dates_names)
for (j in 1:length(COEF)){
column_C <- c()
column_P <- c()
for (i in 1:length(dates_names)){
c <- ALL_C[[dates_names[i]]][j]
p <- ALL_P[[dates_names[i]]][j]
if (!is.na(p) & p <= 0.05){
column_C <- append(column_C, c, after = length(column_C))
column_P <- append(column_P, p, after = length(column_P))
}else{
column_C <- append(column_C, NA, after = length(column_C))
column_P <- append(column_P, NA, after = length(column_P))
}
}
ALL_C_sig$coef <- column_C
names(ALL_C_sig)[names(ALL_C_sig) == 'coef'] <- COEF[j]
ALL_P_sig$coef <- column_P
names(ALL_P_sig)[names(ALL_P_sig) == 'coef'] <- COEF[j]
}
ALL_C_sig <- ALL_C_sig[rowSums(is.na(ALL_C_sig)) != ncol(ALL_C_sig) - 1, ]
ALL_P_sig <- ALL_P_sig[rowSums(is.na(ALL_P_sig)) != ncol(ALL_P_sig) - 1, ]
saveRDS(ALL_C_sig, file = './TemporalResults/NationalModel/ALL_C_sig.rds')
saveRDS(ALL_P_sig, file = './TemporalResults/NationalModel/ALL_P_sig.rds')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "./")
source("./Modules/Source.R")
dates_names = c("03-29", "04-05", "04-12", "04-19", "04-26", "05-03", "05-10", "05-17", "05-24", "05-31", "06-07", "06-14", "06-21", "06-28", "07-05", "07-12")
COEF = c("(Intercept)",
"scale(`% Hispanic`)","scale(`% Black`)","scale(`% Asian`)","scale(`% Non-Hispanic White`)","scale(`% Native Hawaiian/Other Pacific Islander`)",
"factor(q_popdensity)2","factor(q_popdensity)3","factor(q_popdensity)4","factor(q_popdensity)5",
"scale(log(`Median Household Income`))",
"scale(date_since_social)","scale(date_since)","scale(date_since_reopen)","scale(date_since_reclosure)","scale(date_since_mask)",
"scale(pct_obesity)","scale(pct_age65)","scale(pct_diabetes)",
"scale(LungCancer)","scale(COPD)","scale(AdultAsthma)","scale(PediatricAsthma)",
"scale(All.Cause.death_rate)")
ALL_C = data.frame(coefficients = COEF)
ALL_P = data.frame(coefficients = COEF)
ALL_sig = data.frame(coefficients = COEF)
for (i in 1:length(dates_names)){
fname <- paste("./TemporalResults/NationalModel/",dates_names[i],".rda",sep="")
load(fname)
summ <- eval(as.name(dates_names[i]))
c <- exp(summ[10]$coefficients[,1])
p <- summ[10]$coefficients[,4]
p <- p.adjust(p, method = 'BH', n = length(p))
# merge into master data frame
ALL_C$date <- c[match(ALL_C$coefficients, names(c))]
names(ALL_C)[names(ALL_C) == 'date'] <- dates_names[i]
ALL_P$date <- p[match(ALL_P$coefficients, names(p))]
names(ALL_P)[names(ALL_P) == 'date'] <- dates_names[i]
}
saveRDS(ALL_C, file = './TemporalResults/NationalModel/ALL_C.rds')
saveRDS(ALL_P, file = './TemporalResults/NationalModel/ALL_P.rds')
ALL_C_sig <- data.frame(date = dates_names)
ALL_P_sig <- data.frame(date = dates_names)
for (j in 1:length(COEF)){
column_C <- c()
column_P <- c()
for (i in 1:length(dates_names)){
c <- ALL_C[[dates_names[i]]][j]
p <- ALL_P[[dates_names[i]]][j]
if (!is.na(p) & p <= 0.05){
column_C <- append(column_C, c, after = length(column_C))
column_P <- append(column_P, p, after = length(column_P))
}else{
column_C <- append(column_C, NA, after = length(column_C))
column_P <- append(column_P, NA, after = length(column_P))
}
}
ALL_C_sig$coef <- column_C
names(ALL_C_sig)[names(ALL_C_sig) == 'coef'] <- COEF[j]
ALL_P_sig$coef <- column_P
names(ALL_P_sig)[names(ALL_P_sig) == 'coef'] <- COEF[j]
}
ALL_C_sig <- ALL_C_sig[, colSums(is.na(ALL_C_sig)) != nrow(ALL_C_sig)]
ALL_P_sig <- ALL_P_sig[, colSums(is.na(ALL_P_sig)) != nrow(ALL_P_sig)]
saveRDS(ALL_C_sig, file = './TemporalResults/NationalModel/ALL_C_sig.rds')
saveRDS(ALL_P_sig, file = './TemporalResults/NationalModel/ALL_P_sig.rds')
View(ALL_P_sig)
View(ALL_C_sig)
ggplot(ALL_C_sig, aes(x=date, y=`(Intercept)`))
ggplot(ALL_C_sig, aes(x=date, y=`(Intercept)`))+
geom_line()
ggplot(ALL_C_sig, aes(x=date, y=`(Intercept)`)) +
geom_line()
ggplot(ALL_C_sig, aes(x=date, y=`(Intercept)`, group=1)) +
geom_line()+
geom_point()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "./")
source("./Modules/Source.R")
dates_names = c("03-29", "04-05", "04-12", "04-19", "04-26", "05-03", "05-10", "05-17", "05-24", "05-31", "06-07", "06-14", "06-21", "06-28", "07-05", "07-12")
COEF = c("(Intercept)",
"scale(`% Hispanic`)","scale(`% Black`)","scale(`% Asian`)","scale(`% Non-Hispanic White`)","scale(`% Native Hawaiian/Other Pacific Islander`)",
"factor(q_popdensity)2","factor(q_popdensity)3","factor(q_popdensity)4","factor(q_popdensity)5",
"scale(log(`Median Household Income`))",
"scale(date_since_social)","scale(date_since)","scale(date_since_reopen)","scale(date_since_reclosure)","scale(date_since_mask)",
"scale(pct_obesity)","scale(pct_age65)","scale(pct_diabetes)",
"scale(LungCancer)","scale(COPD)","scale(AdultAsthma)","scale(PediatricAsthma)",
"scale(All.Cause.death_rate)")
ALL_C = data.frame(coefficients = COEF)
ALL_P = data.frame(coefficients = COEF)
ALL_sig = data.frame(coefficients = COEF)
for (i in 1:length(dates_names)){
fname <- paste("./TemporalResults/NationalModel/",dates_names[i],".rda",sep="")
load(fname)
summ <- eval(as.name(dates_names[i]))
c <- exp(summ[10]$coefficients[,1])
p <- summ[10]$coefficients[,4]
p <- p.adjust(p, method = 'BH', n = length(p))
# merge into master data frame
ALL_C$date <- c[match(ALL_C$coefficients, names(c))]
names(ALL_C)[names(ALL_C) == 'date'] <- dates_names[i]
ALL_P$date <- p[match(ALL_P$coefficients, names(p))]
names(ALL_P)[names(ALL_P) == 'date'] <- dates_names[i]
}
saveRDS(ALL_C, file = './TemporalResults/NationalModel/ALL_C.rds')
saveRDS(ALL_P, file = './TemporalResults/NationalModel/ALL_P.rds')
ALL_C_sig <- data.frame(coefficients = COEF)
ALL_P_sig <- data.frame(coefficients = COEF)
for (i in 1:length(dates_names)){
column_C <- c()
column_P <- c()
for (j in 1:length(COEF)){
c <- ALL_C[[dates_names[i]]][j]
p <- ALL_P[[dates_names[i]]][j]
if (!is.na(p) & p <= 0.05){
column_C <- append(column_C, c, after = length(column_C))
column_P <- append(column_P, p, after = length(column_P))
}else{
column_C <- append(column_C, NA, after = length(column_C))
column_P <- append(column_P, NA, after = length(column_P))
}
}
ALL_C_sig$coef <- column_C
names(ALL_C_sig)[names(ALL_C_sig) == 'coef'] <- COEF[j]
ALL_P_sig$coef <- column_P
names(ALL_P_sig)[names(ALL_P_sig) == 'coef'] <- COEF[j]
}
ALL_C_sig <- ALL_C_sig[rowSums(is.na(ALL_C_sig)) != ncol(ALL_C_sig)-1, ]
ALL_P_sig <- ALL_P_sig[rowSums(is.na(ALL_P_sig)) != ncol(ALL_P_sig)-1, ]
saveRDS(ALL_C_sig, file = './TemporalResults/NationalModel/ALL_C_sig.rds')
saveRDS(ALL_P_sig, file = './TemporalResults/NationalModel/ALL_P_sig.rds')
View(ALL_C_sig)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "./")
source("./Modules/Source.R")
dates_names = c("03-29", "04-05", "04-12", "04-19", "04-26", "05-03", "05-10", "05-17", "05-24", "05-31", "06-07", "06-14", "06-21", "06-28", "07-05", "07-12")
COEF = c("(Intercept)",
"scale(`% Hispanic`)","scale(`% Black`)","scale(`% Asian`)","scale(`% Non-Hispanic White`)","scale(`% Native Hawaiian/Other Pacific Islander`)",
"factor(q_popdensity)2","factor(q_popdensity)3","factor(q_popdensity)4","factor(q_popdensity)5",
"scale(log(`Median Household Income`))",
"scale(date_since_social)","scale(date_since)","scale(date_since_reopen)","scale(date_since_reclosure)","scale(date_since_mask)",
"scale(pct_obesity)","scale(pct_age65)","scale(pct_diabetes)",
"scale(LungCancer)","scale(COPD)","scale(AdultAsthma)","scale(PediatricAsthma)",
"scale(All.Cause.death_rate)")
ALL_C = data.frame(coefficients = COEF)
ALL_P = data.frame(coefficients = COEF)
ALL_sig = data.frame(coefficients = COEF)
for (i in 1:length(dates_names)){
fname <- paste("./TemporalResults/NationalModel/",dates_names[i],".rda",sep="")
load(fname)
summ <- eval(as.name(dates_names[i]))
c <- exp(summ[10]$coefficients[,1])
p <- summ[10]$coefficients[,4]
p <- p.adjust(p, method = 'BH', n = length(p))
# merge into master data frame
ALL_C$date <- c[match(ALL_C$coefficients, names(c))]
names(ALL_C)[names(ALL_C) == 'date'] <- dates_names[i]
ALL_P$date <- p[match(ALL_P$coefficients, names(p))]
names(ALL_P)[names(ALL_P) == 'date'] <- dates_names[i]
}
saveRDS(ALL_C, file = './TemporalResults/NationalModel/ALL_C.rds')
saveRDS(ALL_P, file = './TemporalResults/NationalModel/ALL_P.rds')
ALL_C_sig <- data.frame(coefficients = COEF)
ALL_P_sig <- data.frame(coefficients = COEF)
for (i in 1:length(dates_names)){
column_C <- c()
column_P <- c()
for (j in 1:length(COEF)){
c <- ALL_C[[dates_names[i]]][j]
p <- ALL_P[[dates_names[i]]][j]
if (!is.na(p) & p <= 0.05){
column_C <- append(column_C, c, after = length(column_C))
column_P <- append(column_P, p, after = length(column_P))
}else{
column_C <- append(column_C, NA, after = length(column_C))
column_P <- append(column_P, NA, after = length(column_P))
}
}
ALL_C_sig$date <- column_C
names(ALL_C_sig)[names(ALL_C_sig) == 'date'] <- dates_names[i]
ALL_P_sig$date <- column_P
names(ALL_P_sig)[names(ALL_P_sig) == 'date'] <- dates_names[i]
}
ALL_C_sig <- ALL_C_sig[rowSums(is.na(ALL_C_sig)) != ncol(ALL_C_sig)-1, ]
ALL_P_sig <- ALL_P_sig[rowSums(is.na(ALL_P_sig)) != ncol(ALL_P_sig)-1, ]
saveRDS(ALL_C_sig, file = './TemporalResults/NationalModel/ALL_C_sig.rds')
saveRDS(ALL_P_sig, file = './TemporalResults/NationalModel/ALL_P_sig.rds')
View(ALL_P_sig)
test <- as.tibble(ALL_C_sig)
test <- as_tibble(ALL_C_sig)
View(test)
test <- melt(ALL_C_sig, date = c(date))
test <- melt(ALL_C_sig)
View(test)
ALL_C_sig <- rename(ALL_C_sig, c(date = variable))
ALL_C_sig <- readRDS("./TemporalResults/NationalModel/ALL_C_sig.rds")
ALL_C_sig <- melt(ALL_C_sig)
ALL_C_sig <- rename(ALL_C_sig, c(date = variable))
View(ALL_C_sig)
ALL_C_sig <- dplyr::rename(ALL_C_sig, c(date = variable))
View(ALL_C_sig)
ggplot(ALL_C_sig, aes(x=date, y=value, group=coefficients, color=coefficients)) +
geom_line()
ggplot(ALL_C_sig, aes(x=date, y=value, group=coefficients, color=coefficients)) +
geom_line() +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "./")
source("./Modules/Source.R")
data <- readRDS("./TemporalResults/NationalModel/ALL_C.rds")
data <- melt(data)
data <- dplyr::rename(data, c(date = variable))
ggplot(data, aes(x=date, y=value, group=coefficients, color=coefficients)) +
geom_line() +
geom_point()
data <- readRDS("./TemporalResults/NationalModel/ALL_C_sig.rds")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "./")
source("./Modules/Source.R")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../")
source("./Modules/Source.R")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = ".../")
source("./Modules/Source.R")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../")
source("./Modules/Source.R")
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../")
source("./Modules/Source.R")
data <- readRDS("./TemporalResults/NationalModel/ALL_C.rds")
data <- melt(data)
data <- dplyr::rename(data, c(date = variable))
ggplot(data, aes(x=date, y=value, group=coefficients, color=coefficients)) +
geom_line() +
geom_point()
data <- readRDS("./TemporalResults/NationalModel/ALL_C_sig.rds")
data <- melt(data)
data <- dplyr::rename(data, c(date = variable))
ggplot(data, aes(x=date, y=value, group=coefficients, color=coefficients)) +
geom_line() +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "./")
source("./Modules/Source.R")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../")
library("MASS")
library("lme4")
library("glmmTMB")
library("gamm4")
library('caret')
library('blmeco')
library(pROC)
library(VineCopula)
library("PerformanceAnalytics")
library(glmmTMB)
library(ggplot2)
library(cvms)
library(sgof)
library(tidyverse)
library(kableExtra)
# set datafile from parallelism
# args <- commandArgs()
# datafile = args[6]
# set datefile by hand
# datafile = '07-05-2020data-2.Rds'
datafile = './Preprocessing_FTS_Outputs/07-12-2020data.Rds'
aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart<-readRDS(datafile)
# aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart <- subset(aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart,
#                                                                       select = c(Deaths, `% Hispanic`, `% Black`, `% Asian`, `% Non-Hispanic White`, `% Native Hawaiian/Other Pacific Islander`, q_popdensity,
#                                                                                  `Median Household Income`, date_since_social, date_since, date_since_reopen, date_since_reclosure, date_since_mask,
#                                                                                  pct_obesity, pct_age65, pct_diabetes, LungCancer, COPD, AdultAsthma, PediatricAsthma, All.Cause.death_rate, state, population))
combined.mode.nb.random.off.main = glmer.nb(Deaths
~ scale(`% Hispanic`) + scale(`% Black`) + scale(`% Asian`)
+ scale(`% Non-Hispanic White`) + scale(`% Native Hawaiian/Other Pacific Islander`)
# ~ scale(`hispanic`) + scale(`pct_blk`) + scale(`pct_asian`)
# + scale(`pct_white`) + scale(`pct_native`)
+ factor(q_popdensity)
+ scale(log(`Median Household Income`))
+ scale(date_since_social) + scale(date_since)
+ scale(date_since_reopen)
+ scale(date_since_reclosure)
+ scale(date_since_mask)
+ scale(pct_obesity)
+ scale(pct_age65) + scale(pct_diabetes)
+ scale(LungCancer)
+ scale(COPD)
+ scale(AdultAsthma)
+ scale(PediatricAsthma)
+ scale(All.Cause.death_rate)
+ (1|state)
+ offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
# save results in parallelism
date = substr(datafile, 29,33)
assign(date, summary(combined.mode.nb.random.off.main))
fname = paste("./TemporalResults/NationalModel/",date,"_control.rda",sep="")
do.call(save, list(date, file=fname))
s<-summary(combined.mode.nb.random.off.main)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../")
library("MASS")
library("lme4")
library("glmmTMB")
library("gamm4")
library('caret')
library('blmeco')
library(pROC)
library(VineCopula)
library("PerformanceAnalytics")
library(glmmTMB)
library(ggplot2)
library(cvms)
library(sgof)
library(tidyverse)
library(kableExtra)
# set datafile from parallelism
# args <- commandArgs()
# datafile = args[6]
# set datefile by hand
# datafile = '07-05-2020data-2.Rds'
datafile = './Preprocessing_FTS_Outputs/07-12-2020data.Rds'
aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart<-readRDS(datafile)
# aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart <- subset(aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart,
#                                                                       select = c(Deaths, `% Hispanic`, `% Black`, `% Asian`, `% Non-Hispanic White`, `% Native Hawaiian/Other Pacific Islander`, q_popdensity,
#                                                                                  `Median Household Income`, date_since_social, date_since, date_since_reopen, date_since_reclosure, date_since_mask,
#                                                                                  pct_obesity, pct_age65, pct_diabetes, LungCancer, COPD, AdultAsthma, PediatricAsthma, All.Cause.death_rate, state, population))
combined.mode.nb.random.off.main = glmer.nb(Deaths
~ scale(`% Hispanic`) + scale(`% Black`) + scale(`% Asian`)
+ scale(`% Non-Hispanic White`) + scale(`% Native Hawaiian/Other Pacific Islander`)
# ~ scale(`hispanic`) + scale(`pct_blk`) + scale(`pct_asian`)
# + scale(`pct_white`) + scale(`pct_native`)
+ factor(q_popdensity)
+ scale(log(`Median Household Income`))
+ scale(date_since_social) + scale(date_since)
+ scale(date_since_reopen)
+ scale(date_since_reclosure)
+ scale(date_since_mask)
+ scale(pct_obesity)
+ scale(pct_age65) + scale(pct_diabetes)
+ scale(LungCancer)
+ scale(COPD)
+ scale(AdultAsthma)
+ scale(PediatricAsthma)
+ scale(All.Cause.death_rate)
+ (1|state)
+ offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=10000)))
# save results in parallelism
date = substr(datafile, 29,33)
assign(date, summary(combined.mode.nb.random.off.main))
fname = paste("./TemporalResults/NationalModel/",date,"_control.rda",sep="")
do.call(save, list(date, file=fname))
s<-summary(combined.mode.nb.random.off.main)
print(`07-12`)
load("~/COVID-Notebooks/TemporalResults/NationalModel/07-12.rda")
print(`07-12`)
data <- readRDS("./TemporalResults/NationalModel/ALL_C_sig.rds")
data <- melt(data)
data <- dplyr::rename(data, c(date = variable))
ggplot(data, aes(x=date, y=value, group=coefficients, color=coefficients)) +
geom_line() +
geom_point()
load("~/COVID-Notebooks/TemporalResults/NationalModel/07-12_1.rda")
print(`07-12`)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../")
library("MASS")
library("lme4")
library("glmmTMB")
library("gamm4")
library('caret')
library('blmeco')
library(pROC)
library(VineCopula)
library("PerformanceAnalytics")
library(glmmTMB)
library(ggplot2)
library(cvms)
library(sgof)
library(tidyverse)
library(kableExtra)
# set datafile from parallelism
# args <- commandArgs()
# datafile = args[6]
# set datefile by hand
# datafile = '07-05-2020data-2.Rds'
datafile = './Preprocessing_FTS_Outputs/07-12-2020data.Rds'
aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart<-readRDS(datafile)
# aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart <- subset(aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart,
#                                                                       select = c(Deaths, `% Hispanic`, `% Black`, `% Asian`, `% Non-Hispanic White`, `% Native Hawaiian/Other Pacific Islander`, q_popdensity,
#                                                                                  `Median Household Income`, date_since_social, date_since, date_since_reopen, date_since_reclosure, date_since_mask,
#                                                                                  pct_obesity, pct_age65, pct_diabetes, LungCancer, COPD, AdultAsthma, PediatricAsthma, All.Cause.death_rate, state, population))
combined.mode.nb.random.off.main = glmer.nb(Deaths
~ scale(`% Hispanic`) + scale(`% Black`) + scale(`% Asian`)
+ scale(`% Non-Hispanic White`) + scale(`% Native Hawaiian/Other Pacific Islander`)
# ~ scale(`hispanic`) + scale(`pct_blk`) + scale(`pct_asian`)
# + scale(`pct_white`) + scale(`pct_native`)
+ factor(q_popdensity)
+ scale(log(`Median Household Income`))
+ scale(date_since_social) + scale(date_since)
+ scale(date_since_reopen)
+ scale(date_since_reclosure)
+ scale(date_since_mask)
+ scale(pct_obesity)
+ scale(pct_age65) + scale(pct_diabetes)
+ scale(LungCancer)
+ scale(COPD)
+ scale(AdultAsthma)
+ scale(PediatricAsthma)
+ scale(All.Cause.death_rate)
+ (1|state)
+ offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity_heart,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=100000)))
# save results in parallelism
date = substr(datafile, 29,33)
assign(date, summary(combined.mode.nb.random.off.main))
fname = paste("./TemporalResults/NationalModel/",date,"_control.rda",sep="")
do.call(save, list(date, file=fname))
s<-summary(combined.mode.nb.random.off.main)
install.packages("pracma")
